#Использовать fs

Процедура ПередСборкой(Знач РабочийКаталог) Экспорт

	Сообщить("Установка локальных зависимостей библиотек");
	КомандаOpm = Новый Команда;

	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("install -l");	
	КомандаOpm.ДобавитьЛогВыводаКоманды("task.build");

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	Сообщить("Получение последней версии плагинов");
	
	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("run get-plugins");	
	КомандаOpm.ДобавитьПараметр("develop");	

	КомандаOpm.ДобавитьЛогВыводаКоманды("task.build");

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

КонецПроцедуры

Описание.Имя("gitsync")
		.Версия("3.2.0")
		.ВерсияСреды("1.4.0")
		.ВключитьФайл("src")
		.ВключитьФайл("embedded_plugins")
		.ВключитьФайл("oscript_modules")
		.ВключитьФайл("docs")
		.ВключитьФайл("readme.md")
		.ОпределяетКласс("МенеджерПлагинов", "src/core/Классы/МенеджерПлагинов.os")
		.ОпределяетКласс("МенеджерСинхронизации", "src/core/Классы/МенеджерСинхронизации.os")
		.ОпределяетКласс("ПакетнаяСинхронизация", "src/core/Классы/ПакетнаяСинхронизация.os")
		.ИсполняемыйФайл("src/cmd/gitsync.os");