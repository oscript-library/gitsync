///////////////////////////////////////////////////////////////////
//
// Служебный модуль с набором методов работы с командами приложения
//
// Представляет собой модификацию приложения gitsync от 
// команды oscript-library
//
// Идея формата модуля взята из проекта deployka
//
///////////////////////////////////////////////////////////////////

Перем ИсполнителиКоманд;

Процедура ЗарегистрироватьКоманды(Знач Парсер) Экспорт
	
	ИсполнителиКоманд = Новый Соответствие;
	
	ДобавитьКоманду("help", 		"КомандаСправкаПоПараметрам", 	Парсер);
	ДобавитьКоманду("clone", 		"КомандаClone", 				Парсер);
	ДобавитьКоманду("init", 		"КомандаInit", 					Парсер);
	ДобавитьКоманду("set-version" , "КомандаSetVersion", 			Парсер);
	ДобавитьКоманду("all" , 		"КомандаAll", 					Парсер);
	ДобавитьКоманду("export", 		"КомандаExport", 				Парсер);
	ДобавитьКоманду("sync",			"КомандаSync", 					Парсер);
	
КонецПроцедуры // ЗарегистрироватьКоманды

Функция ПолучитьКоманду(Знач ИмяКоманды) Экспорт
	
	КлассРеализации = ИсполнителиКоманд[ИмяКоманды];
	Если КлассРеализации = Неопределено Тогда

		ВызватьИсключение "Неверная операция. Команда '" + ИмяКоманды + "' не предусмотрена";

	КонецЕсли;
	
	Возврат КлассРеализации;
	
КонецФункции // ПолучитьКоманду

Функция ВыполнитьКоманду(Знач ИмяКоманды, Знач ПараметрыКоманды, Знач ДополнительныеПараметры) Экспорт
	
	Команда = ПолучитьКоманду(ИмяКоманды);
	Возврат Команда.ВыполнитьКоманду(ПараметрыКоманды, ДополнительныеПараметры);

КонецФункции // ВыполнитьКоманду

Функция РезультатыКоманд() Экспорт

	РезультатыКоманд = Новый Структура;
	РезультатыКоманд.Вставить("НеРеализовано", 255);
	РезультатыКоманд.Вставить("Успех", 0);
	РезультатыКоманд.Вставить("НеверныеПараметры", 5);
	РезультатыКоманд.Вставить("ОшибкаВремениВыполнения", 1);
	
	Возврат РезультатыКоманд;

КонецФункции // РезультатыКоманд

Функция КодВозвратаКоманды(Знач Команда) Экспорт

	Возврат Число(Команда);

КонецФункции // КодВозвратаКоманды

Процедура ДобавитьКоманду(Знач ИмяКоманды, Знач КлассРеализации, Знач Парсер)
	
	РеализацияКоманды = Новый(КлассРеализации);
	РеализацияКоманды.ЗарегистрироватьКоманду(ИмяКоманды, Парсер);
	ИсполнителиКоманд.Вставить(ИмяКоманды, РеализацияКоманды);

КонецПроцедуры // ДобавитьКоманду

Процедура ПоказатьСправкуПоКомандам(ИмяКоманды = Неопределено) Экспорт

	ПараметрыКоманды = Новый Соответствие;
	Если ИмяКоманды <> Неопределено Тогда

		ПараметрыКоманды.Вставить("Команда", ИмяКоманды);

	КонецЕсли;

	ВыполнитьКоманду("help", ПараметрыКоманды, Неопределено);

КонецПроцедуры // ПоказатьСправкуПоКомандам