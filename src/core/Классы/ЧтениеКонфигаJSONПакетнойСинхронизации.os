
#Использовать json

Перем мНастройки;
Перем СоответствиеПозиционныхПараметров;

Процедура ПриСозданииОбъекта(ВходящиеСоответствиеПозиционныхПараметров)
	
	СоответствиеПозиционныхПараметров = ВходящиеСоответствиеПозиционныхПараметров;
	
КонецПроцедуры
	

Функция ПрочитатьНастройкиИзФайла(Знач ФайлНастроек) Экспорт
	
	мНастройки = Новый Соответствие;
	
	JsonСтрока  = ПрочитатьФайл(ФайлНастроек);
	
	ПарсерJSON  = Новый ПарсерJSON();
	ПараметрыJSON = ПарсерJSON.ПрочитатьJSON(JsonСтрока);

	ВсеНастройки = ПараметрыJSON["gitsync-options"];
	ГлобальныеНастройки = ВсеНастройки["global"];
	
	Для Каждого КлючИЗначение Из ГлобальныеНастройки Цикл

		Если КлючИЗначение.Ключ = "flags" Тогда
			ОбработатьВФлаги(мНастройки, КлючИЗначение.Значение)
		Иначе
			мНастройки.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЕсли
	КонецЦикла;
	
	мНастройки.Вставить("Репозитарии", Новый Массив);
	
	МассивРепозиториев = ВсеНастройки["repositories"];
	
	Для Каждого Репозиторий Из МассивРепозиториев Цикл
		
		ПрочитатьНастройкиРепозитория(Репозиторий);
		
	КонецЦикла;
	
	Возврат мНастройки;
	
КонецФункции

Процедура ПрочитатьНастройкиРепозитория(Знач СтруктураНастроекРепозитория)
	
	Репо = Новый Соответствие;
	
	мНастройки["Репозитарии"].Добавить(Репо);
	
	Для Каждого КлючИЗначение Из СтруктураНастроекРепозитория Цикл
		Ключ = КлючИЗначение.Ключ;
		
		ПозиционныйКлюч = СоответствиеПозиционныхПараметров[Ключ];
		
		Если Не ПозиционныйКлюч = Неопределено Тогда
			Ключ = ПозиционныйКлюч;
		КонеЦЕсли;

		Если Ключ = "flags" Тогда
			
			ОбработатьВФлаги(Репо, КлючИЗначение.Значение)

		Иначе
		
			Репо.Вставить(Ключ,КлючИЗначение.Значение);
		
		КонецЕсли;

	КонецЦикла;

	Для Каждого ГлобальнаяНастройка Из мНастройки Цикл

		Ключ = ГлобальнаяНастройка.Ключ;

		Если ГлобальнаяНастройка.Ключ  = "Репозитарии" Тогда
			Продолжить
		КонецЕсли;
				
		Если Репо[Ключ] = Неопределено Тогда
			Репо.Вставить(Ключ, ГлобальнаяНастройка.Значение);
		КонецЕсли;

	КонецЦикла

КонецПроцедуры

Процедура ОбработатьВФлаги(СооответсвиеВставки, Знач НаборФлагов )

	Для Каждого КлючИЗначение Из НаборФлагов Цикл

		СооответсвиеВставки.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		
	КонецЦикла

КонецПроцедуры

Функция ПрочитатьФайл(Знач ИмяФайла)
	ФайлСуществующий = Новый Файл(ИмяФайла);
	Если Не ФайлСуществующий.Существует() Тогда
		ВызватьИсключение "Неверная структура файла настроек / файл пустой";;
	КонецЕсли;

	Чтение = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.UTF8);
	Рез  = Чтение.Прочитать();
	Чтение.Закрыть();
	Возврат Рез;
КонецФункции // ПрочитатьФайл()