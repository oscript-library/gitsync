////////////////////////////////////////////////////////////////////////////
//
// Скрипт управляет запуском синхронизации с GIT по нескольким репозиториям
// Copyright EvilBeaver 2015
//
////////////////////////////////////////////////////////////////////////////

#Использовать cmdline
#Использовать "core"

Перем мПараметрыКоманды;
Перем мДополнительныеПараметры;
Перем мНастройки;
Перем мФлагПринудительнойСинхронизации;

////////////////////////////////////////////////////////////////////////
// Программный интерфейс

Процедура ВыполнитьСинхронизациюПоФайлуНастроек(Знач ПараметрыКоманды, Знач ДополнительныеПараметры, Знач ФайлНастроек, Знач Принудительно = Ложь) Экспорт

	ПрочитатьНастройкиИзФайла(ФайлНастроек);
	мФлагПринудительнойСинхронизации = Принудительно;
	мПараметрыКоманды = ПараметрыКоманды;
	мДополнительныеПараметры = ДополнительныеПараметры;

	СинхронизироватьХранилища();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// Работа с конфигурационным файлом

Процедура ПрочитатьНастройкиИзФайла(Знач ФайлНастроек)

	Конфиг = ЗагрузитьСценарий(ОбъединитьПути(ТекущийСценарий().Каталог, "xml-config.os"));
	мНастройки = Конфиг.ПрочитатьНастройкиИзФайла(ФайлНастроек);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// Вспомогательные методы

Функция СинхронизироватьПринудительно()

	Возврат мФлагПринудительнойСинхронизации;

КонецФункции

Процедура СинхронизироватьХранилища()

	ПакетнаяСинхронизация = Новый ПакетнаяСинхронизация;
	ПакетнаяСинхронизация.СинхронизироватьХранилища(мНастройки, ЭтотОбъект, СинхронизироватьПринудительно())

КонецПроцедуры

Функция ПреобразоватьЗначениеКБулево(ЗначениеПараметра)
	Если ЗначениеПараметра = "on" Тогда
		Возврат Истина;
	ИначеЕсли ЗначениеПараметра = "off" Тогда
		Возврат Ложь;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции


// Вызывается в качестве обработчика из класса ПакетнаяСинхронизация
//
Процедура ПриНеобходимостиСинхронизации(Знач Репо) Экспорт

	ЗначенияПараметров = Новый Соответствие;
	ЗначенияПараметров.Вставить("ПутьКХранилищу", Репо.КаталогХранилища1С);
	ЗначенияПараметров.Вставить("URLРепозитория", Репо.GitURL);
	ЗначенияПараметров.Вставить("ЛокальныйКаталогГит", Репо.КаталогВыгрузки);
	ЗначенияПараметров.Вставить("-email", Репо.ДоменПочтыДляGit);
	ЗначенияПараметров.Вставить("-v8version", Репо.ПутьКПлатформе83);
	ЗначенияПараметров.Вставить("-push-every-n-commits", Репо.КоличествоКоммитовДоPush);
	ЗначенияПараметров.Вставить("-check-authors", ПреобразоватьЗначениеКБулево(Репо.ПроверитьАвторовХранилища));
	ЗначенияПараметров.Вставить("-stop-if-empty-comment", ПреобразоватьЗначениеКБулево(Репо.ПрерватьВыполнениеБезКомментарияКВерсии));
	ЗначенияПараметров.Вставить("-auto-set-tags", ПреобразоватьЗначениеКБулево(Репо.АвтоматическаяУстановкаТэговПоВерсиям));

	// дополним настройками из параметров команды
	Для Каждого ПараметрКоманды Из мПараметрыКоманды Цикл

		ЗначенияПараметров.Вставить(ПараметрКоманды.Ключ, ПараметрКоманды.Значение);

	КонецЦикла;

	МенеджерКомандПриложения.ВыполнитьКоманду("sync", ЗначенияПараметров);

КонецПроцедуры

Функция ТребуетсяСинхронизироватьХранилище(Знач Репо) Экспорт
	
	Возврат РаспаковщикКонфигурации.ТребуетсяСинхронизироватьХранилище(
				ИмяФайлаБазыХранилища(Репо.КаталогХранилища1С), 
				Репо.КаталогВыгрузки, 
				мДополнительныеПараметры);
		
КонецФункции

Функция ИмяФайлаБазыХранилища(Знач Каталог)
	Возврат ОбъединитьПути(Каталог, "1cv8ddb.1CD");
КонецФункции
