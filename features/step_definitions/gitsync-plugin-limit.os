// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd
#Использовать tempfiles

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("КоличествоКоммитовДолжноБыть");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры

//Количество коммитов должно быть "5"
Процедура КоличествоКоммитовДолжноБыть(Знач ЧислоПроверки) Экспорт
	
	// ИмяФайлаЛогаГит = ВременныеФайлы.НовоеИмяФайла("txt");
	
	// Батник = Новый КомандныйФайл;
	// Батник.ДобавитьКоманду(СтрШаблон("cd %1 %2",?(ЭтоWindows, "/d", ""), ОбернутьВКавычки(КаталогИсходников)));
	// Батник.ДобавитьКоманду("git log --pretty=oneline >"+ОбернутьВКавычки(ИмяФайлаЛогаГит));
	
	// КодВозврата = Батник.Исполнить();
	// Утверждения.ПроверитьРавенство(0, КодВозврата, "Получение краткого лога хранилища git");
	
	// ЛогГит = Новый ЧтениеТекста;
	// ЛогГит.Открыть(ИмяФайлаЛогаГит);
	// КоличествоКоммитов = 0;
	// Пока ЛогГит.ПрочитатьСтроку() <> Неопределено Цикл
	// 	КоличествоКоммитов = КоличествоКоммитов + 1;
	// КонецЦикла;
	// ЛогГит.Закрыть();
	
	// Утверждения.ПроверитьРавенство(Число(ЧислоПроверки), КоличествоКоммитов, "");
	
КонецПроцедуры

